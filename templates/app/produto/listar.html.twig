{% extends 'pagesApp.html.twig' %}
{% block addStylesheet %}
  <link rel="stylesheet" href="{{ asset('styles/novaVenda.css') }}">
{% endblock %}
{% block content %}
	<div class="container py-5">
		<div class="mb-4">
			<div class="mb-4 d-flex flex-row justify-content-between align-items-center">
				<h1>Produtos</h1>
				<div>
					<a href="/produtos/cadastrar" class="btn btn-danger">
						<i class="bi bi-plus"></i>Novo produto
					</a>
				</div>
			</div>
			{% include "mensagens.html.twig" %}
			<section class="tabela2">
				<div class="table-responsive">
					<table class="table-striped">
						<thead class="tabela-topo">
							<tr>
								<th scope="col">id</th>
								<th scope="col">Nome</th>
								<th scope="col">Descrição</th>
								<th scope="col">Categoria Id</th>
								<th scope="col">Qtd. Disponível</th>
								<th scope="col">Valor</th>
								<th scope="col-2 text-align-right">Actions</th>
							</tr>
						</thead>
						<tbody id="tabela">
							{% for produto in produtos %}
								<tr>
									<th scope="row">{{ produto.id }}</th>
									<td>{{ produto.nome }}</td>
									<td>{{ produto.descricao }}</td>
									<td>{{ produto.getCategoriaId.getId }}</td>
									<td class="estoque-quantidade" data-id="{{ produto.id }}">{{ produto.getQuantidadeDisponivel }}</td>
									<td>R$ {{ produto.valor }},00</td>
									<td class="col-2 text-nowrap">
										<button 
											class="btn btn-light btn-sm add-estoque-btn" 
											data-id="{{ produto.id }}"
											data-nome="{{ produto.nome }}">
											<i class="bi bi-plus"></i>
										</button>
										<a href="/produto/editar/{{ produto.id }}" class="btn btn-secondary btn-sm">
											<i class="bi bi-pencil"></i>
										</a>
									</td>
								</tr>
							{% endfor %}
						</tbody>
					</table>
				</div>
			</section>
		</div>
	</div>

	<div id="popupAddEstoque" class="popup-container">
		<div class="popup-content">
			<h3>Adicionar Estoque</h3>
			<p id="popupProdutoNome"></p>
			<input type="number" id="quantidadeInput" class="form-control" placeholder="Quantidade" min="1">
			<div class="popup-buttons">
				<button id="confirmarAddEstoque" class="btn btn-success">Confirmar</button>
				<button id="fecharPopup" class="btn btn-danger">Cancelar</button>
			</div>
		</div>
	</div>
{% endblock %}

{% block javascripts %}
	{{ parent() }}
	<script>
		document.addEventListener('DOMContentLoaded', () => {
			const popup = document.getElementById('popupAddEstoque');
			const fecharPopup = document.getElementById('fecharPopup');
			const confirmarAddEstoque = document.getElementById('confirmarAddEstoque');
			const quantidadeInput = document.getElementById('quantidadeInput');
			const popupProdutoNome = document.getElementById('popupProdutoNome');

			let produtoId = null;

			document.querySelectorAll('.add-estoque-btn').forEach(button => {
				button.addEventListener('click', (e) => {
					produtoId = button.getAttribute('data-id') || null;
					const nome = button.getAttribute('data-nome');
					popupProdutoNome.innerText = `Produto: ${nome}`;
					popup.style.display = 'flex';
				});
			});

			fecharPopup.addEventListener('click', () => {
				popup.style.display = 'none';
				quantidadeInput.value = '';
			});

			confirmarAddEstoque.addEventListener('click', () => {
        const quantidade = parseInt(quantidadeInput.value);

        if (!quantidade || quantidade <= 0) {
					alert('Insira uma quantidade válida.');
					return;
        }

        const url = `/produto/add/${produtoId}/${quantidade}`;
        fetch(url, { method: 'GET' })
				.then(response => {
					if (! response.ok) {
						alert('Erro ao atualizar o estoque. Tente novamente.');
						return;
					}
					
						const estoqueField = document.querySelector(`.estoque-quantidade[data-id="${produtoId}"]`);
						const estoqueAtual = parseInt(estoqueField.innerText);
						estoqueField.innerText = estoqueAtual + quantidade;
						popup.style.display = 'none';
						quantidadeInput.value = '';
				})
				.catch(error => {
					console.error('Erro ao enviar a requisição:', error);
					alert('Erro de conexão. Tente novamente.');
				});
    	});
		});
	</script>
{% endblock %}
